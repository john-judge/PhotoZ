// generated by Fast Light User Interface Designer (fluid) version 1.0106

#include "LogWindowUI.h"

inline void LogWindowUI::cb_Close_i(Fl_Button*, void*) {
  LogWindow->hide();
}
void LogWindowUI::cb_Close(Fl_Button* o, void* v) {
  ((LogWindowUI*)(o->parent()->user_data()))->cb_Close_i(o,v);
}
#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>

LogWindowUI::LogWindowUI() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = LogWindow = new Fl_Double_Window(523, 600);
    w = o;
    o->user_data((void*)(this));
    { Fl_Button* o = new Fl_Button(25, 25, 60, 25, "Close");
      o->callback((Fl_Callback*)cb_Close);
      o->user_data(this);
    }
    { Fl_Text_Display* o = LogTextDisplay = new Fl_Text_Display(-5, 55, 530, 550);
      Fl_Group::current()->resizable(o);
      o->user_data(this);
      o->buffer(new Fl_Text_Buffer);
    }
    { Fl_Output* o = LogFileName = new Fl_Output(110, 25, 400, 25);
      o->user_data(this);
    }
    o->end();
  }
}

void LogWindowUI::add_text(const char *fmt, ...) {
  va_list stack;
va_start(stack, fmt);

char buffer[1024];
vsprintf(buffer, fmt, stack);
LogTextDisplay->insert(buffer);
}
