// generated by Fast Light User Interface Designer (fluid) version 1.0106

#include "DisplayContrastUI.h"

DisplayContrastUI::DisplayContrastUI() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = DisplayContrastWindow = new Fl_Double_Window(418, 446, "Display Contrast");
    w = o;
    o->user_data((void*)(this));
    o->align(FL_ALIGN_TOP_LEFT);
    { PlotWindow* o = Contrast = new PlotWindow(0, 0, 275, 245);
      o->box(FL_ENGRAVED_BOX);
      o->color((Fl_Color)55);
      o->selection_color(FL_BACKGROUND_COLOR);
      o->labeltype(FL_NORMAL_LABEL);
      o->labelfont(0);
      o->labelsize(14);
      o->labelcolor(FL_BLACK);
      o->align(FL_ALIGN_CENTER);
      o->when(FL_WHEN_RELEASE);
      o->user_data(this);
    }
    { Fl_Group* o = new Fl_Group(5, 265, 365, 135, "Contrast Map Type");
      o->box(FL_ENGRAVED_BOX);
      o->align(FL_ALIGN_TOP_LEFT);
      { Fl_Round_Button* o = LinearMapButton = new Fl_Round_Button(17, 270, 25, 35, "Linear");
        o->type(102);
        o->down_box(FL_ROUND_DOWN_BOX);
        o->callback((Fl_Callback*)contrast_linear_cb);
        o->align(FL_ALIGN_RIGHT);
        o->user_data(this);
      }
      { Fl_Round_Button* o = AutostretchMapButton = new Fl_Round_Button(17, 307, 25, 25, "Auto Stretch");
        o->type(102);
        o->down_box(FL_ROUND_DOWN_BOX);
        o->callback((Fl_Callback*)contrast_auto_cb);
        o->align(FL_ALIGN_RIGHT);
        o->user_data(this);
      }
      { Fl_Round_Button* o = HistogramEqualizationButton = new Fl_Round_Button(170, 270, 25, 35, "Histogram Equalization");
        o->type(102);
        o->down_box(FL_ROUND_DOWN_BOX);
        o->callback((Fl_Callback*)contrast_heq_cb);
        o->align(FL_ALIGN_RIGHT);
        o->user_data(this);
      }
      { Fl_Round_Button* o = CustomMapButton = new Fl_Round_Button(170, 305, 25, 25, "Custom");
        o->type(102);
        o->down_box(FL_ROUND_DOWN_BOX);
        o->callback((Fl_Callback*)contrast_custom_cb);
        o->align(FL_ALIGN_RIGHT);
        o->user_data(this);
      }
      { Fl_Round_Button* o = GammaMapButton = new Fl_Round_Button(17, 340, 25, 25, "Gamma");
        o->type(102);
        o->down_box(FL_ROUND_DOWN_BOX);
        o->callback((Fl_Callback*)contrast_gamma_cb);
        o->align(FL_ALIGN_RIGHT);
        o->user_data(this);
      }
      { Fl_Value_Slider* o = GammaSlider = new Fl_Value_Slider(140, 340, 170, 25);
        o->type(1);
        o->maximum(10);
        o->value(1);
        o->callback((Fl_Callback*)gamma_slider_cb);
        o->user_data(this);
      }
      { Fl_Round_Button* o = RawDataMapButton = new Fl_Round_Button(110, 375, 25, 25, "Raw Data");
        o->type(102);
        o->down_box(FL_ROUND_DOWN_BOX);
        o->callback((Fl_Callback*)contrast_rawdata_cb);
        o->align(FL_ALIGN_RIGHT);
        o->user_data(this);
      }
      o->end();
    }
    { Fl_Box* o = new Fl_Box(285, 15, 110, 20, "Min Value");
      o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
    }
    { Fl_Box* o = MinValueBox = new Fl_Box(285, 35, 110, 20);
      o->box(FL_DOWN_BOX);
    }
    { Fl_Box* o = new Fl_Box(285, 60, 110, 20, "Max Value");
      o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
    }
    { Fl_Box* o = MaxValueBox = new Fl_Box(285, 80, 110, 20);
      o->box(FL_DOWN_BOX);
    }
    { Fl_Group* o = ChannelButtons = new Fl_Group(285, 120, 110, 100, "Color Band");
      o->box(FL_ENGRAVED_BOX);
      o->align(FL_ALIGN_TOP_LEFT);
      { Fl_Button* o = new Fl_Button(285, 120, 110, 25, "All");
        o->type(102);
        o->down_box(FL_DOWN_BOX);
        o->color((Fl_Color)24);
        o->selection_color((Fl_Color)24);
        o->labelcolor(FL_BACKGROUND2_COLOR);
        o->callback((Fl_Callback*)contrast_select_band_cb);
        o->user_data(this);
      }
      { Fl_Button* o = new Fl_Button(285, 145, 110, 25, "Red");
        o->type(102);
        o->down_box(FL_DOWN_BOX);
        o->color((Fl_Color)80);
        o->selection_color((Fl_Color)80);
        o->labelcolor(FL_BACKGROUND2_COLOR);
        o->callback((Fl_Callback*)contrast_select_band_cb);
        o->user_data(this);
      }
      { Fl_Button* o = new Fl_Button(285, 170, 110, 25, "Green");
        o->type(102);
        o->color(FL_DARK_GREEN);
        o->selection_color(FL_DARK_GREEN);
        o->labelcolor(FL_BACKGROUND2_COLOR);
        o->callback((Fl_Callback*)contrast_select_band_cb);
        o->user_data(this);
      }
      { Fl_Button* o = new Fl_Button(285, 195, 110, 25, "Blue");
        o->type(102);
        o->color(FL_SELECTION_COLOR);
        o->selection_color(FL_SELECTION_COLOR);
        o->labelcolor(FL_BACKGROUND2_COLOR);
        o->callback((Fl_Callback*)contrast_select_band_cb);
        o->user_data(this);
      }
      o->end();
    }
    o->end();
    o->resizable(o);
  }
}

void DisplayContrastUI::show() {
  DisplayContrastWindow->show();
}
