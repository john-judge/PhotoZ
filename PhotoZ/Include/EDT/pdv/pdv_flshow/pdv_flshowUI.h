// generated by Fast Light User Interface Designer (fluid) version 1.0109

#ifndef pdv_flshowUI_h
#define pdv_flshowUI_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <FL/filename.H>
#include <FL/Fl_Menu_Bar.H>
extern void save_ras_cb(Fl_Menu_*, void*);
extern void save_tiff_cb(Fl_Menu_*, void*);
extern void exit_cb(Fl_Menu_*, void*);
extern void viewtoolbar_cb(Fl_Menu_*, void*);
extern void viewstatusbar_cb(Fl_Menu_*, void*);
extern void histogrammenu_cb(Fl_Menu_*, void*);
extern void profilemenu_cb(Fl_Menu_*, void*);
extern void pixeltextmenu_cb(Fl_Menu_*, void*);
extern void zoom_to_window_cb(Fl_Menu_*, void*);
extern void setupmenu_cb(Fl_Menu_*, void*);
extern void confeditmenu_cb(Fl_Menu_*, void*);
extern void increaseshutter_cb(Fl_Menu_*, void*);
extern void decreaseshutter_cb(Fl_Menu_*, void*);
extern void snapmenu_cb(Fl_Menu_*, void*);
extern void contcapmenu_cb(Fl_Menu_*, void*);
extern void open_manual_cb(Fl_Menu_*, void*);
#include <FL/Fl_Group.H>
#include <FL/Fl_Button.H>
extern void camera_selector_cb(Fl_Button*, void*);
extern void camera_config_editor_cb(Fl_Button*, void*);
extern void camera_settings_cb(Fl_Button*, void*);
extern void snap_image_cb(Fl_Button*, void*);
extern void start_capture_cb(Fl_Button*, void*);
extern void pixel_text_cb(Fl_Button*, void*);
extern void histogram_cb(Fl_Button*, void*);
extern void profile_cb(Fl_Button*, void*);
extern void contrast_cb(Fl_Button*, void*);
extern void rgb_cb(Fl_Button*, void*);
extern void roi_edit_cb(Fl_Button*, void*);
#include <FL/Fl_Menu_Button.H>
extern void set_zoom_value_cb(Fl_Menu_*, void*);
extern void reset_cursor_cb(Fl_Button*, void*);
extern void select_line_cb(Fl_Button*, void*);
extern void select_box_cb(Fl_Button*, void*);
extern void zoom_up_cb(Fl_Button*, void*);
extern void zoom_down_cb(Fl_Button*, void*);
#include "PdvGlLiveScroller.h"
#include <FL/Fl_Pack.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Output.H>

class pdv_flshowUI {
public:
  pdv_flshowUI(int width, int height, const char *l = 0);
  Fl_Double_Window *MainWindow;
  static Fl_Menu_Item menu_[];
  static Fl_Menu_Item *FileMenu;
  static Fl_Menu_Item *SaveMenu;
  static Fl_Menu_Item *RasMenuItem;
  static Fl_Menu_Item *TiffMenuItem;
  static Fl_Menu_Item *ExitMenuItem;
  static Fl_Menu_Item *ViewMenu;
  static Fl_Menu_Item *ViewToolbarMenuItem;
  static Fl_Menu_Item *ViewStatusbarMenuItem;
  static Fl_Menu_Item *ViewHistogramMenuItem;
  static Fl_Menu_Item *ViewProfileMenuItem;
  static Fl_Menu_Item *ViewPixelTextMenuItem;
  static Fl_Menu_Item *ZoomToWindow;
  static Fl_Menu_Item *CameraMenu;
  static Fl_Menu_Item *SetupMenuItem;
  static Fl_Menu_Item *ConfEditMenuItem;
  static Fl_Menu_Item *ShutterUpMenuItem;
  static Fl_Menu_Item *ShutterDownMenuItem;
  static Fl_Menu_Item *SnapMenuItem;
  static Fl_Menu_Item *ContCapMenuItem;
  static Fl_Menu_Item *ProcessMenu;
  static Fl_Menu_Item *FilterMenuItem;
  static Fl_Menu_Item *ArithmeticMenuItem;
  static Fl_Menu_Item *MaskMenuItem;
  static Fl_Menu_Item *FillMenuItem;
  static Fl_Menu_Item *RemapMenuItem;
  static Fl_Menu_Item *HelpMenu;
  static Fl_Menu_Item *ManualMenuItem;
  static Fl_Menu_Item *AboutItem;
  Fl_Group *toolbar;
  Fl_Button *NewButton;
  Fl_Button *OpenButton;
  Fl_Button *SaveButton;
  Fl_Button *ConfigButton;
  Fl_Button *ConfigEditButton;
  Fl_Button *CameraSettingsButton;
  Fl_Button *SnapButton;
  Fl_Button *StartButton;
  Fl_Button *PixelTextButton;
  Fl_Button *HistogramButton;
  Fl_Button *ProfileButton;
  Fl_Button *ContrastButton;
  Fl_Button *ColorInterpButton;
  Fl_Button *RoiEditButton;
  Fl_Menu_Button *ZoomValueMenu;
  static Fl_Menu_Item menu_ZoomValueMenu[];
  Fl_Button *ZoomValue;
  Fl_Button *ResetCursorButton;
  Fl_Button *SelectLineButton;
  Fl_Button *SelectBoxButton;
  Fl_Button *ZoomUpButton;
  Fl_Button *ZoomDownButton;
  PdvGlLiveScroller *Display;
  Fl_Pack *statusbar;
  Fl_Output *Status;
  Fl_Output *Coords;
  Fl_Output *PixelValues;
  Fl_Output *FrameRate;
  Fl_Box *ActiveState;
  void make_window();
  void show();
  void resize();
};
#endif
