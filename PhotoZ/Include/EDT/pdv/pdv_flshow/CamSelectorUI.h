// generated by Fast Light User Interface Designer (fluid) version 1.0106

#ifndef CamSelectorUI_h
#define CamSelectorUI_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <string.h>
#include "CamSelector.h"
#include <FL/Fl_Group.H>
#include "CamBrowser.h"
extern void camselector_browser_cb(CamBrowser*, void*);
#include <FL/Fl_Box.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Output.H>
#include <FL/Fl_Button.H>
extern void camselector_ok_cb(Fl_Button*, void*);
extern void camselector_cancel_cb(Fl_Button*, void*);
extern void camselector_reload_cb(Fl_Button*, void*);
#include <FL/Fl_Value_Output.H>
#include <FL/Fl_Text_Display.H>

class CamSelectorUI {
public:
  CamSelector *owner;
  CamSelectorUI(CamSelector *p, const char *path);
  Fl_Double_Window *CamSelectorWindow;
  CamBrowser *ConfigBrowser;
  Fl_Input *ConfigFileInput;
  Fl_Input *ConfigPathInput;
  Fl_Output *CameraTypeOutput;
  Fl_Button *OkButton;
  Fl_Button *CancelButton;
  Fl_Button *ReloadButton;
  Fl_Value_Output *CameraWidthOutput;
  Fl_Value_Output *CameraHeightOutput;
  Fl_Value_Output *CameraDepthOutput;
  Fl_Text_Display *InitialCommentOutput;
private:
  char config_path_name[1024];
public:
  void show();
  ~CamSelectorUI();
private:
  Fl_Text_Buffer help_buffer;
};
#endif
