// generated by Fast Light User Interface Designer (fluid) version 1.0106

#include "PixelTextUI.h"

PixelTextUI::PixelTextUI(EdtImage *pImage) {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = PixelTextWindow = new Fl_Double_Window(523, 506, "Pixel Values");
    w = o;
    o->user_data((void*)(this));
    { PixelTable* o = PixelTableWindow = new PixelTable(0, 0, 530, 420);
      o->box(FL_ENGRAVED_BOX);
      o->color(FL_BACKGROUND_COLOR);
      o->selection_color(FL_BACKGROUND_COLOR);
      o->labeltype(FL_NORMAL_LABEL);
      o->labelfont(0);
      o->labelsize(14);
      o->labelcolor(FL_BLACK);
      o->align(FL_ALIGN_TOP);
      o->when(FL_WHEN_RELEASE);
      o->set_image(pImage);
      o->end();
    }
    { Fl_Value_Input* o = CursorXInput = new Fl_Value_Input(82, 445, 55, 25, "X    ");
      o->maximum(65536);
    }
    { Fl_Value_Input* o = CursorYInput = new Fl_Value_Input(163, 445, 55, 25, "Y   ");
      o->maximum(65536);
    }
    { Fl_Check_Button* o = FollowCursorCheck = new Fl_Check_Button(245, 445, 110, 25, "Follow Cursor");
      o->down_box(FL_DOWN_BOX);
      o->value(1);
      o->callback((Fl_Callback*)follow_cursor_cb);
      o->user_data(this);
    }
    { Fl_Check_Button* o = HexDisplayCheck = new Fl_Check_Button(382, 445, 95, 25, "Hex Display");
      o->down_box(FL_DOWN_BOX);
      o->callback((Fl_Callback*)hex_display_cb);
      o->user_data(this);
    }
    { Fl_Group* o = ChannelButtons = new Fl_Group(190, 474, 315, 25, "Select Color Channel");
      o->align(FL_ALIGN_LEFT);
      { Fl_Button* o = new Fl_Button(215, 477, 65, 20, "Red");
        o->type(102);
        o->down_box(FL_DOWN_BOX);
        o->value(1);
        o->color(FL_RED);
        o->selection_color(FL_RED);
        o->labelcolor(FL_BACKGROUND2_COLOR);
        o->callback((Fl_Callback*)pixel_text_channel_red_cb);
        o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
        o->user_data(this);
      }
      { Fl_Button* o = new Fl_Button(300, 477, 65, 20, "Green");
        o->type(102);
        o->down_box(FL_ROUND_DOWN_BOX);
        o->color(FL_DARK_GREEN);
        o->selection_color(FL_DARK_GREEN);
        o->labelcolor(FL_BACKGROUND2_COLOR);
        o->callback((Fl_Callback*)pixel_text_channel_green_cb);
        o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
        o->user_data(this);
      }
      { Fl_Button* o = new Fl_Button(385, 477, 65, 20, "Blue");
        o->type(102);
        o->down_box(FL_ROUND_DOWN_BOX);
        o->color((Fl_Color)176);
        o->selection_color((Fl_Color)176);
        o->labelcolor(FL_BACKGROUND2_COLOR);
        o->callback((Fl_Callback*)pixel_text_channel_blue_cb);
        o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
        Fl_Group::current()->resizable(o);
        o->user_data(this);
      }
      o->end();
    }
    o->end();
    o->resizable(o);
  }
}

void PixelTextUI::show() {
  PixelTextWindow->show();
}

PixelTextUI::~PixelTextUI() {
  PixelTextWindow->hide();
delete PixelTextWindow;
}

void PixelTextUI::hex_display_cb(Fl_Check_Button *w, void *data) {
  PixelTextUI *pUI = (PixelTextUI *) data;

pUI->PixelTableWindow->set_hex(w->value());
}
