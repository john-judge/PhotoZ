PhotoZ Migration to x64 platform: Notes

This is my general approach:
	1) Remove all external dependencies (Include and Lib directories) from a clean copy of PhotoZ, so that hopefully we isolate missing dependency / linkage problems from backward compatibility issues.
	2) Reinstall the EDT/PDV, FLTK, Paintlib, and other external dependencies, targeting 64-bit platform versions. Build static linkages in VS with PhotoZ_LilDave selected in the Solution Explorer, go to View > Property Pages > Linker > Input and select Edit from the drop-down arrow from the far right.
	3) Check that the solution is system-agnostic, i.e. shouldn't depend on host configuration. Also, verify that the application can now address memory over 4 GB.



1) Re-install PDV
Download the PDV driver executable from EDT site, locate in install directory
Replace EDT folder in Solution's PhotoZ/Include folder
From the pdv/lib folder, copy the .lib files from EDT to the Solution's PhotoZ/Library folder

2) Re-install FLTK
Install vcpkg:
	git clone https://github.com/microsoft/vcpkg.git
	cd vcpkg
	bootstrap-vcpkg.sh
	
Then run:
	vcpkg install fltk:x64-windows
This will install cmake, 7zip, nuget, and other tools if needed.


3) Also using vcpkg
OpenGL: vcpkg install opengl:x64-windows

vcpkg directory contains Include and .lib files to move to the corresponding PhotoZ folders.

4) Re-install paintlib
Follow instructions on http://www.paintlib.de/paintlib/
	Use VS to build the paintlib library
	Problems: paintlib was developed in the late 1990s and the owner stopped maintaining in 2004.
	 (This was before 64-bit architecture became standard around 2008)


VS settings
 - In Project Pages, add include path $(ProjectDir)Include
 - Define _WINSOCKAPI_ and _WIN32 as global macros (Configuration Properties > C/C++ > Preprocessor)
 - In Visual Studio, with PhotoZ_LilDave selected in the Solution Explorer, go to View > Property Pages > Linker > Input and select the drop-down arrow from the far right. 
Click Edit. In the Additional Dependencies Window, paste the following into the text box:

clseredt.lib
fltk_gl.lib
jpeg.lib
libungif.lib
turbojpeg.lib
edtimage.lib
fltk_images.lib
libjpeg.lib
paintlibd.lib
zlib.lib
fltk.lib
fltkforms.lib
libpng16.lib
pdvlib.lib
fltk_forms.lib
imgfiles.lib
libtiff.lib
pdvplus.lib


Click OK. Back in Property Pages, click Apply before clicking OK.

x64 is selected as active/target platform, and use Build > Rebuild Solution to ensure that Win32 build is clear before build is re-attempted.


In the case of missing DLLs when running the executable:
Again Property Pages, set your Debugging > Environment to:
	PATH=%PATH%;$(ProjectDir)Lib;$(LibraryPath);$(ProjectDir)Include\EDT\pdv
